---
interface TooltipProps {
  label?: string;
  side?: "top" | "right" | "bottom" | "left";
  theme?: "light" | "dark";
}

const { label, side = "top", theme = "dark" }: TooltipProps = Astro.props;

const variants = {
  top: "bottom-full left-1/2 -translate-x-1/2 -translate-y-[130%] text-center",
  right: "left-full top-1/2 -translate-y-1/2 translate-x-2 text-center",
  bottom: "top-full left-1/2 -translate-x-1/2 translate-y-2 text-center",
  left: "right-full top-1/4 -translate-y-1/2 -translate-x-2 text-center",
};

const arrowBase = "absolute w-3 h-3 transform rotate-45";

const arrowPosition = {
  top: "-bottom-1.5 left-1/2 -translate-x-1/2",
  right: "-top-1.5 left-0 -translate-x-1/2",
  bottom: "-top-1.5 left-1/2 -translate-x-1/2",
  left: "-top-1.5 right-0 translate-x-1/2",
};

const themeVariants = {
  dark: {
    bg: "bg-slate-800/90",
    text: "text-white",
    arrow: "bg-slate-800/90",
  },
  light: {
    bg: "bg-gray-100",
    text: "text-dark-blue",
    arrow: "bg-gray-100",
  },
};
---

<div class="group relative inline-block">
  <slot />
  <div
    class={`tooltip-content absolute z-50 min-w-48 max-w-64 w-max px-4 py-2.5 rounded-lg text-base font-medium whitespace-normal ${variants[side]} ${themeVariants[theme].bg} ${themeVariants[theme].text} opacity-0 invisible transition-all duration-200 group-hover:opacity-100 group-hover:visible`}
    role="tooltip"
  >
    {label}
    <div
      class={`${arrowBase} ${arrowPosition[side]} ${themeVariants[theme].arrow}`}
      aria-hidden="true"
    >
    </div>
  </div>
</div>
