---
interface SpinnerProps {
  size?: "small" | "medium" | "large";
  color?: "primary" | "success" | "warning" | "danger";
  label?: string;
  labelPosition?: "top" | "right" | "bottom" | "left";
}

const {
  size = "medium",
  color = "primary",
  label = "Cargando",
  labelPosition = "bottom",
}: SpinnerProps = Astro.props;

const sizes = {
  small: {
    container: "size-8",
    spinner: "size-6",
    text: "text-xs",
  },
  medium: {
    container: "size-12",
    spinner: "size-10",
    text: "text-sm",
  },
  large: {
    container: "size-16",
    spinner: "size-14",
    text: "text-base",
  },
};

const colors = {
  primary: "text-blue-500",
  success: "text-green-500",
  warning: "text-yellow-500",
  danger: "text-red-500",
};

const labelPositions = {
  top: "flex-col-reverse",
  right: "flex-row",
  bottom: "flex-col",
  left: "flex-row-reverse",
};
---

<div
  class={`inline-flex items-center justify-center gap-2 ${labelPositions[labelPosition]}`}
>
  <div
    class={`${sizes[size].container} relative flex items-center justify-center`}
  >
    <svg
      class={`animate-spin ${colors[color]} ${sizes[size].spinner}`}
      viewBox="0 0 50 50"
      role="status"
      aria-live="polite"
      aria-label="Loading..."
    >
      <circle
        class="opacity-30"
        cx="25"
        cy="25"
        r="20"
        fill="none"
        stroke="gray"
        stroke-width="4"></circle>
      <circle
        class="opacity-70"
        cx="25"
        cy="25"
        r="20"
        fill="none"
        stroke="currentColor"
        stroke-width="4"
        stroke-linecap="round"
        stroke-dasharray="60 200"
        stroke-dashoffset="0"></circle>
    </svg>
  </div>

  {
    label && (
      <span class={`${sizes[size].text} text-gray-600 dark:text-gray-300`}>
        {label}
      </span>
    )
  }
</div>

<style>
  @keyframes spin {
    0% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(360deg);
    }
  }
  .animate-spin {
    animation: spin 1s linear infinite;
  }
  .animate-bounce {
    animation: bounce 1.4s infinite ease-in-out both;
  }
  @keyframes bounce {
    0%,
    80%,
    100% {
      transform: scale(0);
    }
    40% {
      transform: scale(1);
    }
  }
</style>
