---
interface AccordeonProps {
  title?: string;
  content?: string;
  className?: string;
}

const { title, content, className }: AccordeonProps = Astro.props;
---

<style>
  .accordion-content {
    max-height: 0;
    overflow: hidden;
    transition: max-height 0.3s ease-in-out;
    will-change: max-height;
  }

  .accordion-content.visible {
    max-height: auto;
  }

  .chevron {
    transition: transform 0.3s ease-in-out;
  }

  input:checked ~ .chevron {
    transform: rotate(180deg);
  }
</style>

<article
  class="flex flex-col gap-4 px-6 py-4 border border-gray-200 rounded-xl bg-slate-800/50 w-full max-w-sm"
>
  <label for="accordeonId" class="flex items-center justify-between">
    <input type="checkbox" id="accordeonId" hidden />
    <h2 class="text-xl font-medium">{title}</h2>
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="28"
      height="28"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      stroke-width="2"
      stroke-linecap="round"
      stroke-linejoin="round"
      class="lucide lucide-chevron-down-icon lucide-chevron-down chevron"
    >
      <path d="m6 9 6 6 6-6"></path>
    </svg>
  </label>
  <div id="accordeonContent" class="accordion-content">
    <div class="pt-2">
      {content}
    </div>
  </div>
</article>

<script is:inline>
  const accordion = document.getElementById("accordeonId");
  const accordionContent = document.getElementById("accordeonContent");

  accordion.addEventListener("change", () => {
    if (accordion.checked) {
      accordionContent.style.maxHeight = accordionContent.scrollHeight + "px";
      accordionContent.classList.add("visible");
    } else {
      accordionContent.style.maxHeight = "0";
      accordionContent.classList.remove("visible");
    }
  });

  if (accordion.checked) {
    accordionContent.style.maxHeight = accordionContent.scrollHeight + "px";
    accordionContent.classList.add("visible");
  }
</script>
